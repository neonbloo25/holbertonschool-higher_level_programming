The "1-my_list.txt" doctest
===========================
This tests the 1-my_list.py class method
with different edge cases.

>>> MyList = __import__('1-my_list').MyList

>>> my_list = MyList()
>>> my_list.append(3)
>>> my_list.append(4)
>>> my_list.append(1)
>>> my_list.append(5)
>>> my_list.append(2)
>>> print(my_list)
[3, 4, 1, 5, 2]

>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

=======================
Added *args to __init__
and to super().__init__
=======================

>>> my_list = MyList([5, 7, 3])
>>> print(my_list)
[5, 7, 3]

>>> my_list.print_sorted()
[3, 5, 7]

>>> my_list = MyList([0, 4, -5, 9, -2])
>>> my_list.print_sorted()
[-5, -2, 0, 4, 9]

>>> my_list = MyList(None)
Traceback (most recent call last):
TypeError: 'NoneType' object is not iterable

>>> print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'print_sorted' is not defined
>>> my_list.print_sorted()
[]

>>> my_list = MyList()
>>> my_list.print_sorted()
[]

>>> my_list3 = MyList([0])
>>> my_list3 is MyList([0])
False
